name: 'Internal-CI'
on: push

jobs:
  static-analysis:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: "actions/checkout@v3"
      - name: Static Analysis
        run: make static

  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: "actions/checkout@v3"
      - name: Build
        run: make build

  unit-tests:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: "actions/checkout@v3"
      - name: Unit Tests
        run: make test

  end-to-end:
    runs-on: self-hosted
    environment: AF_XDP CI
    steps:
      - name: Checkout
        uses: "actions/checkout@v3"
      - name: Delete previous logs
        run: |
          for i in $(kubectl get nodes | awk '{print $1}' | awk '{if (NR!=1) {print}}')
          do
            echo "Cleaning up logs on node $i"
            ssh $i "rm -f /var/log/afxdp-k8s-plugins/afxdp-cni-e2e.log && rm -f /var/log/afxdp-k8s-plugins/afxdp-dp-e2e.log" || true
          done
      - name: E2E Test (full host run)
        run: ulimit -l 65536 && make e2efull
      - name: E2E Test (full CI daemonset run)
        env:
          DOCKER_REG: ${{ secrets.DOCKER_REG }}
        run: ulimit -l 65536 && make image && cd test/e2e/ && ./e2e-test.sh --ci
      - name: CNI logs
        if: always()
        run: |
          for i in $(kubectl get nodes | awk '{print $1}' | awk '{if (NR!=1) {print}}')
          do
            echo "**********************************************************************************************************************************************************"
            echo "CNI logs from node $i"
            echo "**********************************************************************************************************************************************************"
            echo
            ssh $i "cat /var/log/afxdp-k8s-plugins/afxdp-cni-e2e.log" || true
            echo -e "\n\n\n\n\n\n\n"
          done
      - name: Device Plugin logs
        if: always()
        run: |
          for i in $(kubectl get nodes | awk '{print $1}' | awk '{if (NR!=1) {print}}')
          do
            echo "**********************************************************************************************************************************************************"
            echo "Device plugin logs from node $i"
            echo "**********************************************************************************************************************************************************"
            echo
            ssh $i "cat /var/log/afxdp-k8s-plugins/afxdp-dp-e2e.log" || true
            echo -e "\n\n\n\n\n\n\n"
          done
      - name: UDS Directory
        if: always()
        run: |
          for i in $(kubectl get nodes | awk '{print $1}' | awk '{if (NR!=1) {print}}')
          do
            echo "UDS directory on node $i"
            ssh $i "ls -laR /tmp/afxdp_dp/" || true
            echo
          done
      - name: List Remaining Subfunctions
        if: always()
        run: |
          for i in $(kubectl get nodes | awk '{print $1}' | awk '{if (NR!=1) {print}}')
          do
            echo "Subfunctions on node $i"
            ssh $i "devlink port list" || true
            echo
          done
      - name: Remove Remaining Subfunctions
        if: always()
        run: |
          for i in $(kubectl get nodes | awk '{print $1}' | awk '{if (NR!=1) {print}}')
          do
            echo "Removing subfunctions on node $i"
            ssh $i "
            devlink_output=(\$(devlink port list | awk '{print \$1}' | sed 's/.\$//'))
            for i in \"\${devlink_output[@]}\"; do
              if [[ \$i == \"pci/\"* ]] && [[ \$i != *\"/0\" ]]; then
                devlink port function set \$i state inactive
                devlink port del \$i
                echo \$i
              fi
            done
            "
            echo
          done